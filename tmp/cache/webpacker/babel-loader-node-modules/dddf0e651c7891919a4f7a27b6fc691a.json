{"ast":null,"code":"import mapboxgl from 'mapbox-gl';\n\nvar initMapbox = function initMapbox() {\n  var mapElement = document.getElementById('map');\n\n  if (mapElement) {\n    // only build a map if there's a div#map to inject into\n    mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/mapbox/streets-v10'\n    });\n    var markers = JSON.parse(mapElement.dataset.markers);\n    markers.forEach(function (marker) {\n      new mapboxgl.Marker().setLngLat([marker.lng, marker.lat]).addTo(map);\n    });\n\n    var fitMapToMarkers = function fitMapToMarkers(map, markers) {\n      var bounds = new mapboxgl.LngLatBounds();\n      markers.forEach(function (marker) {\n        return bounds.extend([marker.lng, marker.lat]);\n      });\n      map.fitBounds(bounds, {\n        padding: 70,\n        maxZoom: 15,\n        duration: 0\n      });\n    };\n\n    fitMapToMarkers(map, markers);\n  }\n};\n\nexport { initMapbox };","map":{"version":3,"sources":["/Users/felixhermann/Documents/GreenImpact/app/javascript/plugins/init_mapbox.js"],"names":["mapboxgl","initMapbox","mapElement","document","getElementById","accessToken","dataset","mapboxApiKey","map","Map","container","style","markers","JSON","parse","forEach","marker","Marker","setLngLat","lng","lat","addTo","fitMapToMarkers","bounds","LngLatBounds","extend","fitBounds","padding","maxZoom","duration"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,WAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrB,MAAMC,UAAU,GAAGC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAAnB;;AAEA,MAAIF,UAAJ,EAAgB;AAAE;AACdF,IAAAA,QAAQ,CAACK,WAAT,GAAuBH,UAAU,CAACI,OAAX,CAAmBC,YAA1C;AACA,QAAMC,GAAG,GAAG,IAAIR,QAAQ,CAACS,GAAb,CAAiB;AACzBC,MAAAA,SAAS,EAAE,KADc;AAEzBC,MAAAA,KAAK,EAAE;AAFkB,KAAjB,CAAZ;AAIA,QAAMC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWZ,UAAU,CAACI,OAAX,CAAmBM,OAA9B,CAAhB;AACAA,IAAAA,OAAO,CAACG,OAAR,CAAgB,UAACC,MAAD,EAAY;AACxB,UAAIhB,QAAQ,CAACiB,MAAb,GACKC,SADL,CACe,CAACF,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACI,GAApB,CADf,EAEKC,KAFL,CAEWb,GAFX;AAGH,KAJD;;AAKA,QAAMc,eAAe,GAAG,SAAlBA,eAAkB,CAACd,GAAD,EAAMI,OAAN,EAAkB;AACtC,UAAMW,MAAM,GAAG,IAAIvB,QAAQ,CAACwB,YAAb,EAAf;AACAZ,MAAAA,OAAO,CAACG,OAAR,CAAgB,UAAAC,MAAM;AAAA,eAAIO,MAAM,CAACE,MAAP,CAAc,CAACT,MAAM,CAACG,GAAR,EAAaH,MAAM,CAACI,GAApB,CAAd,CAAJ;AAAA,OAAtB;AACAZ,MAAAA,GAAG,CAACkB,SAAJ,CAAcH,MAAd,EAAsB;AAAEI,QAAAA,OAAO,EAAE,EAAX;AAAeC,QAAAA,OAAO,EAAE,EAAxB;AAA4BC,QAAAA,QAAQ,EAAE;AAAtC,OAAtB;AACH,KAJD;;AAKAP,IAAAA,eAAe,CAACd,GAAD,EAAMI,OAAN,CAAf;AACH;AACJ,CAtBD;;AAwBA,SAASX,UAAT","sourcesContent":["import mapboxgl from 'mapbox-gl';\n\nconst initMapbox = () => {\n    const mapElement = document.getElementById('map');\n\n    if (mapElement) { // only build a map if there's a div#map to inject into\n        mapboxgl.accessToken = mapElement.dataset.mapboxApiKey;\n        const map = new mapboxgl.Map({\n            container: 'map',\n            style: 'mapbox://styles/mapbox/streets-v10'\n        });\n        const markers = JSON.parse(mapElement.dataset.markers);\n        markers.forEach((marker) => {\n            new mapboxgl.Marker()\n                .setLngLat([marker.lng, marker.lat])\n                .addTo(map);\n        });\n        const fitMapToMarkers = (map, markers) => {\n            const bounds = new mapboxgl.LngLatBounds();\n            markers.forEach(marker => bounds.extend([marker.lng, marker.lat]));\n            map.fitBounds(bounds, { padding: 70, maxZoom: 15, duration: 0 });\n        };\n        fitMapToMarkers(map, markers);\n    }\n};\n\nexport { initMapbox };"]},"metadata":{},"sourceType":"module"}